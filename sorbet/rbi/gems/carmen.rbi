# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/carmen/all/carmen.rbi
#
# carmen-1.1.3

module Carmen
  def self.append_data_path(path); end
  def self.clear_data_paths; end
  def self.data_paths; end
  def self.data_paths=(paths); end
  def self.i18n_backend; end
  def self.i18n_backend=(backend); end
  def self.reset_data_paths; end
  def self.reset_i18n_backend; end
  def self.root_path; end
  def self.root_path=(arg0); end
end
module Carmen::Querying
  def coded(code); end
  def named(name, options = nil); end
  def normalise_name(name); end
end
class Carmen::RegionCollection < Array
  def attribute_to_search_for_code(code); end
  def query_collection; end
  def typed(type); end
  include Carmen::Querying
end
module Carmen::Utils
  def self.deep_hash_merge(hashes); end
  def self.merge_arrays_by_keys(arrays, keys); end
end
class Carmen::Region
  def <=>(other); end
  def code; end
  def flatten_data(arrays); end
  def initialize(data = nil, parent = nil); end
  def inspect; end
  def load_data_at_path(path); end
  def load_subregions; end
  def load_subregions_from_path(path, parent = nil); end
  def name; end
  def parent; end
  def path(suffix = nil); end
  def reset!; end
  def subregion_class; end
  def subregion_data_path; end
  def subregion_directory; end
  def subregions; end
  def subregions?; end
  def to_hash; end
  def to_s; end
  def type; end
end
class Carmen::World < Carmen::Region
  def inspect; end
  def name; end
  def path; end
  def self.allocate; end
  def self.instance; end
  def self.new(*arg0); end
  def subregion_class; end
  def subregion_data_path; end
  def type; end
  extend Singleton::SingletonClassMethods
  include Singleton
end
class Carmen::Country < Carmen::Region
  def alpha_2_code; end
  def alpha_3_code; end
  def code; end
  def common_name; end
  def initialize(data = nil, parent = nil); end
  def inspect; end
  def numeric_code; end
  def official_name; end
  def self.all; end
  def self.alpha_2_coded(code); end
  def self.alpha_3_coded(code); end
  def self.attribute_to_search_for_code(code); end
  def self.numeric_coded(code); end
  def self.numerically_coded(code); end
  def self.query_collection; end
  def subregion_directory; end
  def to_hash; end
  extend Carmen::Querying
  extend SingleForwardable
end
module Carmen::I18n
end
class Carmen::I18n::Simple
  def append_locale_path(path); end
  def available_locales; end
  def cache; end
  def cache=(arg0); end
  def fallback_locale; end
  def initialize(*initial_locale_paths); end
  def inspect; end
  def load_cache_if_needed; end
  def load_hashes_for_paths(paths); end
  def locale; end
  def locale=(locale); end
  def locale_paths; end
  def read(key); end
  def read_from_hash(key, source_hash); end
  def reset!; end
  def t(key); end
  def translate(key); end
end
